From 2f45d2f810ec641daada9f0c69d6783e0d9d34d2 Mon Sep 17 00:00:00 2001
From: Tim Stahlhut <stahta01@gmail.com>
Date: Sat, 29 Apr 2023 17:37:47 -0400
Subject: Add printf debug lines

---
 src/assemble.c | 1 +
 src/instr.c    | 4 +++-
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/assemble.c b/src/assemble.c
index c40b5d0..6569cd5 100644
--- a/src/assemble.c
+++ b/src/assemble.c
@@ -782,6 +782,7 @@ static void pseudo_fcc(struct prog_line *line) {
 	struct node **arga = node_array_of(line->args);
 	for (int i = 0; i < nargs; i++) {
 		emit_formatted("FCC", i, arga[i], 0);
+		fprintf(stderr, "%s node_type_of=%d\n", "inside assemble.c near line 786", node_type_of(arga[i]));
 	}
 }
 
diff --git a/src/instr.c b/src/instr.c
index 27f8433..c645f44 100644
--- a/src/instr.c
+++ b/src/instr.c
@@ -104,8 +104,10 @@ void instr_rel(struct opcode const *op, struct node const *args) {
 	int rel8 = to_rel16(arga[0]->data.as_int - (cur_section->pc + 1));
 	_Bool rel8v = (rel8 < -128 || rel8 > 127);
 	if ((op->type & OPCODE_EXT_TYPE) == OPCODE_REL8) {
-		if (rel8v)
+		if (rel8v) {
+			fprintf(stderr, "%s rel8=%d pc=%X op=%s data.as_int%x\n", "inside instr.c near line 108", rel8, cur_section->pc, op->op, arga[0]->data.as_int);
 			error(error_type_out_of_range, "8-bit relative value out of range");
+		}
 		section_emit_uint8(rel8);
 	} else {
 		if (!rel8v && node_attr_of(arga[0]) != node_attr_16bit)
-- 
