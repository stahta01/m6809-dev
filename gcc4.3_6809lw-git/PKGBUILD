# Maintainer: Tim S <stahta01@gmail.com>

### Major build options
_BUGURL='https://github.com/stahta01/gcc4.6/issues'
_BUILTBY='Built by stahta01'
# If newlib is missing, enable _build_boot_gcc
_build_boot_gcc=yes

### build options not normally changed
_basename=gcc
_machine_suffix=6809
_realname_suffix=lw
_realname=${_basename}${_machine_suffix}${_realname_suffix}
_machine=m${_machine_suffix}
_target=${_machine}-unknown
_assembler=lwtools

pkgbase=gcc4.3_6809lw-git
pkgver=4.3.6+d20110627.r39.c0.g6503c21eb909
_sourcedir=${_basename}-git
pkgrel=1

if [[ "${_build_boot_gcc}" == "yes" ]]; then
  pkgname="boot-${_realname}"
  pkgdesc="The GNU bootstrap C compiler for the ${_machine} microprocessor"
else
  pkgname="${_realname}"
  pkgdesc="The GNU C++ compiler for the ${_machine} microprocessor"
fi
options=('!emptydirs') # '!strip' 'debug')
arch=('i686' 'x86_64')
url="https://github.com/stahta01/gcc4.6"
license=('GPL3')
groups=("${_target}-toolchain")
depends=(lwtools)
_makedepends=(
  'bison' 'diffutils' 'gettext' 'gettext-devel'
  'intltool' 'make' 'patch' 'perl' 'tar')
if [[ "${_build_boot_gcc}" == "yes" ]]; then
  makedepends=(${_makedepends[@]})
  optdepends=("${_target}-newlib${_machine_suffix}${_realname_suffix}: Standard C library optimized for embedded systems")
else
  makedepends=(${_makedepends[@]} ${_target}-newlib${_machine_suffix}${_realname_suffix})
fi
replaces=(boot-${_realname})
provides=(boot-${_realname})
conflicts=(boot-${_realname})

_branch=releases/gcc-4.3
MPFR_VERSION=2.4.2
GMP_VERSION=4.3.2
MPC_VERSION=0.8.1
noextract=("mpfr-${MPFR_VERSION}.tar.bz2"
           "gmp-${GMP_VERSION}.tar.bz2"
           "mpc-${MPC_VERSION}.tar.gz")
source=(ftp://gcc.gnu.org/pub/gcc/infrastructure/mpfr-${MPFR_VERSION}.tar.bz2
        ftp://gcc.gnu.org/pub/gcc/infrastructure/gmp-${GMP_VERSION}.tar.bz2
        ftp://gcc.gnu.org/pub/gcc/infrastructure/mpc-${MPC_VERSION}.tar.gz
       "${_sourcedir}"::"git+https://github.com/gcc-mirror/gcc.git#branch=${_branch}"
       #"${_sourcedir}"::"git+https://github.com/gcc-mirror/gcc.git#commit=${_git_commit}"
        001-gcc-4.3-fixed-compile-issue-with-gcc-5-in-gcc-toplev.patch
        006-gcc-4.3-PR_54300_rtl-optimization.patch
        011-gcc-4.3-suppress-makeinfo-warning.patch
        013-gcc-4.3-Change-default-NATIVE_SYSTEM_HEADER_DIR.patch
        021-gcc-4.3-edit-core-source-files.patch
        022-gcc-4.3-add-m6809-source-files.patch
        023-gcc-4.3-df-m6809-patch-to-prevent-naked-function-from-creat.patch
        025-gcc-4.3-add-support-for-C-exception-handling.patch
        031-gcc-4.3-edit-config_sub.patch
        031-gcc-4.4-d20080218-edit-config_sub.patch
        031-gcc-4.4.0-edit-config_sub.patch
        031-gcc-4.4-edit-config_sub.patch
        032-gcc-4.3-bcd-modified-libgcc-config.host-file.patch
        033-gcc-4.3-edit-config_gcc.patch
        033-gcc-4.4-edit-config_gcc.patch
        034-gcc-4.3-edit-configure_ac.patch
        037-gcc-4.3-fix-error-with-pod2man-version-2.4.2-added-pod2man-f.patch
        041-gcc-4.3-edit-configure.patch
        171-gcc-4.4-add-DWARF2_UNWIND_INFO-guard.patch
        705-gcc-4.3-texi2pod.pl-Escape-braces-in-regexp-involving-strong.patch)
sha256sums=('c7e75a08a8d49d2082e4caee1591a05d11b9d5627514e678f02d66a124bcf2ba'
            '936162c0312886c21581002b79932829aa048cfaf9937c6265aeaa14f1cd1775'
            'e664603757251fd8a352848276497a4c79b7f8b21fd8aedd5cc0598a38fee3e4'
            'SKIP'
            '48e8df8fb5c2266f34ba96d159cc2a2aad5cb285403ec59e93408afccc9a100e'
            '5ce48e53b2cd2e877454e15e2678eae1b4c7de49241ed993bb511068154d024b'
            'dd174b790a13d43e527a3d5807cf415407bd0c67532495da139afd14a6265462'
            'de101a8d3f7cbed56903b14c0270139ff5976f40a1a0199fda1733c070ff24da'
            '306966ffd6c9d5671de0bc1b2b27725428849108075dd4e1c6a7b4e5316961b0'
            'd89d04685205bf2783b0aca682152de92dc82984690958978297749aff816245'
            '04a82f6fa7b84cf31c9046805d637af1ef40e40ea728ed8ce4e05fcec9b75f7d'
            'e6b7b19ccfa1f8ac802596e9eea703957f68b07fdfa761046f2f26286af6b641'
            '57b25a9faee200cfcfa9bfeec65bbff36ec036600cd416305fdd01fbc513e78d'
            '45de2308ee058d24ed049ff72cd0248426ae4e4a7e26160db2dcabe5e88a0e7a'
            '95d752cfef85047e50bcaf9be04dac0bf36bddf5b8c3d9fb99d1c2f1a1a9c428'
            'f837fb56b3a1d11cda980f9ca8a8a48cec52fbf716b5c9ef47259f218ccede52'
            'ee731d547ca900c298a2dd37a3ce2527d1b15c48e0a31b2a4fd1105d351b4e81'
            '213280849f8f77ec6b5831bf63e15c3787914ae24f779b64ad13e03c2b6c5210'
            '586f58be5c2c8df52fc3f1f0d0b7232aa145e42b48023be92b3498a33e4e728c'
            '9d6a7e02484ed194945d9606638f9d5375daad415fba698bdd9eef52109c8f60'
            '2028c4544e5878e3b530d19b1e88012d885bb56d8f640c1efafadbd15c4f7606'
            '557b7d43b1c029a3cf345a219677aec3b6e5d1d66635a6d7a900a5cb2668c40a'
            'e54184b113fd47171f79b6e27aef3323fd7e9e08f78a12260ec34681f51f2cb0'
            '1afb2022fb8a6390b26c24603007c8cf29435bc2c68a576898a2f45c3207cfee')
# =========================================== #
_extract_to_gcc_folder() {
    local tarfile="$1"
    local subfolder="$(echo "$tarfile" | sed 's/-.*$//')"
    if [ ! -d  "$_sourcedir/$subfolder" ]; then
        echo "Extracting ${tarfile} to $_sourcedir/$subfolder"
        mkdir -p "$_sourcedir/$subfolder"
        tar -x --strip-components=1 -f "$tarfile" -C "$_sourcedir/$subfolder"
    else
        echo "Folder $_sourcedir/$subfolder already exists"
    fi
}
# =========================================== #
_git_base_commit=

pkgver() {
  cd ${srcdir}/${_sourcedir}
  local _gcc_version=$(head -n 34 gcc/BASE-VER | sed -e 's/.* //' | tr -d '"\n')
  local _gcc_date=$(head -n 34 gcc/DATESTAMP | sed -e 's/.* //' | tr -d '"\n')
  if [[ -n "${_git_base_commit}" ]]; then
    printf "%s+d%s.r%s.c%s.g%s" "$_gcc_version" "$_gcc_date" \
      $(git rev-list --count $(git log -1 --format=%H -- gcc/DATESTAMP)..${_git_base_commit}) \
      $(git rev-list --count ${_git_base_commit}..HEAD) \
      $(git rev-parse --short=12 ${_git_base_commit})
  else
    printf "%s" ${pkgver}
  fi
}

prepare() {
  cd ${srcdir}/${_sourcedir}

  git am --abort || true

  git clean -fxd

  _git_base_commit=$(git rev-parse HEAD)

  cd ${srcdir}
  _extract_to_gcc_folder            gmp-${GMP_VERSION}.tar.bz2
  _extract_to_gcc_folder            mpfr-${MPFR_VERSION}.tar.bz2
  _extract_to_gcc_folder            mpc-${MPC_VERSION}.tar.gz

  cd ${srcdir}/${_sourcedir}
  # Remove files added by patches below
  rm -fr gcc/config/m6809
  rm -f contrib/pod2man

  GIT_AM="git am --committer-date-is-author-date"

  local _gcc_version=$(head -n 34 gcc/BASE-VER | sed -e 's/.* //' | tr -d '"\n')
  local _gcc_date=$(head -n 34 gcc/DATESTAMP | sed -e 's/.* //' | tr -d '"\n')
  echo "_gcc_version := ${_gcc_version}"
  echo "_gcc_date := ${_gcc_date}"

  # Fixes for building with GCC version 5 or newer
  patch --forward -p1 -i "$srcdir"/001-gcc-4.3-fixed-compile-issue-with-gcc-5-in-gcc-toplev.patch

  # Backported Pull Requests or other changes from other branches
  patch --forward -p1 -i "$srcdir"/006-gcc-4.3-PR_54300_rtl-optimization.patch

  # Warning reduction changes
  patch --forward -p1 -i "$srcdir"/011-gcc-4.3-suppress-makeinfo-warning.patch
  patch --forward -p1 -i "$srcdir"/013-gcc-4.3-Change-default-NATIVE_SYSTEM_HEADER_DIR.patch

  # GCC6809 source code changes
  patch --forward -p1 -i "$srcdir"/021-gcc-4.3-edit-core-source-files.patch
  patch --forward -p1 -i "$srcdir"/022-gcc-4.3-add-m6809-source-files.patch
  patch --forward -p1 -i "$srcdir"/023-gcc-4.3-df-m6809-patch-to-prevent-naked-function-from-creat.patch
  patch --forward -p1 -i "$srcdir"/025-gcc-4.3-add-support-for-C-exception-handling.patch

  ####
  ## GCC6809 build code changes
  if [[ ${_gcc_version:0:3} == "4.3" ]] ; then
    echo "took 031 4.3"
    patch --forward -p1 -i "$srcdir"/031-gcc-4.3-edit-config_sub.patch
  elif [[ ${_gcc_version} == "4.4.2" ]] ; then
    echo "took 031 4.4.2"
    patch --forward -p1 -i "$srcdir"/031-gcc-4.4.0-edit-config_sub.patch
  elif [[ ${_gcc_version} == "4.4.1" ]] ; then
    echo "took 031 4.4.1"
    patch --forward -p1 -i "$srcdir"/031-gcc-4.4.0-edit-config_sub.patch
  elif [[ ${_gcc_version} == "4.4.0" ]] ; then
    if [[ ${_gcc_date} < "20080323" ]] ; then
      echo "took 031 4.4.0 < 20080323"
      patch --forward -p1 -i "$srcdir"/031-gcc-4.4-d20080218-edit-config_sub.patch
    else
      echo "took 031 4.4.0 else"
      patch --forward -p1 -i "$srcdir"/031-gcc-4.4.0-edit-config_sub.patch
    fi
  else
    echo "took 031 else"
    patch --forward -p1 -i "$srcdir"/031-gcc-4.4-edit-config_sub.patch
  fi
  patch --forward -p1 -i "$srcdir"/032-gcc-4.3-bcd-modified-libgcc-config.host-file.patch
  if [[ ${_gcc_date} < "20080323" ]] || [[ ${_gcc_version:0:3} == "4.3" ]] ; then
    patch --forward -p1 -i "$srcdir"/033-gcc-4.3-edit-config_gcc.patch
  else
    patch --forward -p1 -i "$srcdir"/033-gcc-4.4-edit-config_gcc.patch
  fi
  patch --forward -p1 -i "$srcdir"/034-gcc-4.3-edit-configure_ac.patch
  patch --forward -p1 -i "$srcdir"/037-gcc-4.3-fix-error-with-pod2man-version-2.4.2-added-pod2man-f.patch

  patch --forward -p1 -i "$srcdir"/041-gcc-4.3-edit-configure.patch
  #patch --forward -p1 -i "$srcdir"/171-gcc-4.4-add-DWARF2_UNWIND_INFO-guard.patch
  patch --forward -p1 -i "$srcdir"/705-gcc-4.3-texi2pod.pl-Escape-braces-in-regexp-involving-strong.patch
}

build() {
  if [[ -d "build-gcc-${CARCH}" ]]; then
    rm -rf build-gcc-${CARCH}
  fi
  mkdir build-gcc-${CARCH}
  cd build-gcc-${CARCH}

  local -a _gcc_pass_cfg_options
  if [[ "${_build_boot_gcc}" == "yes" ]]; then
    _gcc_pass_cfg_options+=("--without-headers")
    _gcc_pass_cfg_options+=("--enable-languages=c")
  else
    _gcc_pass_cfg_options+=("--with-headers=${MSYSTEM_PREFIX}/${_target}/include")
    _gcc_pass_cfg_options+=("--oldincludedir=${MSYSTEM_PREFIX}/${_target}/include")
    _gcc_pass_cfg_options+=("--enable-languages=c,c++")
    _gcc_pass_cfg_options+=("--with-sysroot=${MSYSTEM_PREFIX}/${_target}")
  fi

  echo "CC=${CC-gcc}"

  local CYGWIN_CHOST="${CHOST/-msys/-cygwin}"

  CPPFLAGS=""
  CXXFLAGS="-g3 -Wno-error=format-security"
  CFLAGS="-g3 -Wno-error=format-security"
  MAKEINFO=false \
  ../${_sourcedir}/configure \
    "${_gcc_pass_cfg_options[@]}" \
    --with-newlib \
    --prefix=${MSYSTEM_PREFIX} \
    --libexecdir=${MSYSTEM_PREFIX}/lib \
    --infodir=${MSYSTEM_PREFIX}/share/info \
    --mandir=${MSYSTEM_PREFIX}/share/man \
    --build=${CYGWIN_CHOST} \
    --host=${CYGWIN_CHOST} \
    --with-pkgversion="${_realname} Rev${pkgrel}, ${_BUILTBY}" \
    --with-bugurl="$_BUGURL" \
    --target=${_target} \
    --program-prefix="${_target}-" \
    --disable-multilib \
    --disable-werror \
    --disable-nsl \
    --disable-shared \
    --disable-decimal-float \
    --disable-lto \
    --disable-threads \
    --disable-tls \
    --disable-libada \
    --disable-libffi \
    --disable-libgomp \
    --disable-libmudflap \
    --disable-libquadmath \
    --disable-libsanitizer \
    --disable-libssp \
    --disable-libstdcxx-pch \
    --with-as=${MSYSTEM_PREFIX}/bin/${_target}-as \
    --with-ld=${MSYSTEM_PREFIX}/bin/${_target}-ld \
    --with-ar=${MSYSTEM_PREFIX}/bin/${_target}-ar

  make -j1 all-gcc
}

#check() {
#  cd ${srcdir}/${_sourcedir}/build-gcc-${CARCH}
#  make -k check-gcc
#}

package() {
  CPPFLAGS=""
  CFLAGS="-g3"
  cd "build-gcc-${CARCH}"
  make -j1 DESTDIR="$pkgdir/" install-gcc

  # Remove files to avoid conflict
  rm -fr $pkgdir${MSYSTEM_PREFIX}/share/locale
  rm -fr $pkgdir${MSYSTEM_PREFIX}/share/man/man7
}

# vim:set ts=2 sw=2 et:
