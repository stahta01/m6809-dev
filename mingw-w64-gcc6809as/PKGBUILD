# Maintainer: Tim S <stahta01@gmail.com>

_basename=gcc
_machine_suffix=6809
_realname_suffix=as
_realname=${_basename}${_machine_suffix}${_realname_suffix}
_filename=${_basename}
_foldername=${_basename}
_machine=m${_machine_suffix}
_target=${_machine}-unknown
_assembler=${_realname_suffix}${_machine_suffix}
_patch_version=

pkgbase=mingw-w64-${_realname}
# If newlib is missing, enable _build_boot_gcc
#_build_boot_gcc=yes
if [[ "${_build_boot_gcc}" == "yes" ]]; then
  pkgname="${MINGW_PACKAGE_PREFIX}-boot-${_realname}"
  pkgdesc="The GNU bootstrap C compiler for the ${_machine} microprocessor (mingw-w64)"
else
  pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
  pkgdesc="The GNU C++ compiler for the ${_machine} microprocessor (mingw-w64)"
fi
pkgver=4.3.6
pkgrel=1
pkgdesc="The GNU C compiler for the ${_machine} microprocessor (mingw-w64)"
arch=('any')
url="https://github.com/stahta01/gcc4.3"
license=('GPL3')
groups=("${MINGW_PACKAGE_PREFIX}-${_target}-toolchain")
replaces=(${MINGW_PACKAGE_PREFIX}-boot-${_realname})
provides=(${MINGW_PACKAGE_PREFIX}-boot-${_basename}${_machine_suffix})
conflicts=(${MINGW_PACKAGE_PREFIX}-boot-${_basename}${_machine_suffix})
depends=(${MINGW_PACKAGE_PREFIX}-mpc ${MINGW_PACKAGE_PREFIX}-${_assembler})
_makedepends=(${MINGW_PACKAGE_PREFIX}-gettext
  'bison' 'diffutils' 'gettext' 'gettext-devel'
  'intltool' 'make' 'patch' 'perl' 'tar' 'texinfo')
if [[ "${_build_boot_gcc}" == "yes" ]]; then
  makedepends=(${_makedepends[@]})
else
  makedepends=(${_makedepends[@]} ${MINGW_PACKAGE_PREFIX}-${_target}-newlib${_machine_suffix}${_realname_suffix})
fi
optdepends=("${MINGW_PACKAGE_PREFIX}-${_target}-newlib${_machine_suffix}${_realname_suffix}: Standard C library optimized for embedded systems")
if [[ ${pkgver} == "4.3.6" ]] ; then
  _source_sha256sum='f3765cd4dcceb4d42d46f0d53471d7cedbad50f2112f0312c1dcc9c41eea9810'
elif [[ ${pkgver} == "4.4.7" ]] ; then
  _source_sha256sum='5ff75116b8f763fa0fb5621af80fc6fb3ea0f1b1a57520874982f03f26cd607f'
elif [[ ${pkgver} == "4.5.4" ]] ; then
  _source_sha256sum='eef3f0456db8c3d992cbb51d5d32558190bc14f3bc19383dd93acc27acc6befc'
elif [[ ${pkgver} == "4.6.4" ]] ; then
  _source_sha256sum='35af16afa0b67af9b8eb15cafb76d2bc5f568540552522f5dc2c88dd45d977e8'
else
  echo "Skipping gcc sha256sums check!"
  _source_sha256sum='SKIP'
fi
noextract=(${_filename}-${pkgver}.tar.bz2)
source=("https://ftp.gnu.org/gnu/gcc/gcc-${pkgver}/${_filename}-${pkgver}.tar.bz2"
        001-gcc-4.3-fixed-compile-issue-with-gcc-5-in-gcc-toplev.patch
        002-gcc-4.4.7-add-DWARF2_UNWIND_INFO-guard.patch
        003-gcc-4.5-add-GNUC_STDC_INLINE.patch
        005-gcc-4.3-core-prevent-naked-function-from-creating-stack-slots.patch
        006-gcc-4.3-PR_54300_rtl-optimization.patch
        006-gcc-4.5-PR_54300_rtl-optimization.patch
        008-gcc-4.6-PR-bootstrap-51969.patch
        011-gcc-4.3-suppress-makeinfo-warning.patch
        013-gcc-4.3-Change-default-NATIVE_SYSTEM_HEADER_DIR.patch
        015-gcc-4.3-add-force-to-makeinfo.patch
        016-gcc-4.3-Fix-texi-docs-syntax-errors.patch
        016-gcc-4.4-Fix-texi-docs-syntax-errors.patch
        016-gcc-4.5-Fix-texi-docs-syntax-errors.patch
        021-gcc-4.3-edit-core-source-files.patch
        021-gcc-4.4-edit-core-source-files.patch
        021-gcc-4.6-edit-core-source-files.patch
        022-gcc-4.5-add-m6809-source-files.patch
        022-gcc-4.6-add-m6809-source-files.patch
        022-gcc-4.3-add-m6809-source-files.patch
        023-gcc-4.3-df-m6809-patch-to-prevent-naked-function-from-creat.patch
        025-gcc-4.3-add-support-for-C-exception-handling.patch
        026-gcc-4.3-add-lib-support-for-C-exception-handling.patch
        031-gcc-4.3-edit-config_sub.patch
        031-gcc-4.4-edit-config_sub.patch
        031-gcc-4.4.0-edit-config_sub.patch
        032-gcc-4.3-bcd-modified-libgcc-config.host-file.patch
        033-gcc-4.3-edit-config_gcc.patch
        033-gcc-4.4-edit-config_gcc.patch
        034-gcc-4.3-edit-configure_ac.patch
        037-gcc-4.3-fix-error-with-pod2man-version-2.4.2-added-pod2man-f.patch
        041-gcc-4.3-edit-configure.patch)
sha256sums=(${_source_sha256sum}
            '48e8df8fb5c2266f34ba96d159cc2a2aad5cb285403ec59e93408afccc9a100e'
            '5ba2dd1c4dec84162224ebccee8c7a6e6d9f18a2f6f281c42c05e7e7da89b7fd'
            '8222c61a049e1a09af1f53fb3d6a6146d0b850d3a033dace0d9d93570e03e580'
            '5faba14f433e405d601d6c352bd8d67fae02c46395acdbf13d7d92dc10acae93'
            '5ce48e53b2cd2e877454e15e2678eae1b4c7de49241ed993bb511068154d024b'
            '30b1ce83f5444f2c8314e40f8e346581b2f2cec007f3eb33cb894a2930dc4265'
            '03c721159461908051c1718770c4f79dbaa2d97f9ed67deeab7349e280017662'
            'dd174b790a13d43e527a3d5807cf415407bd0c67532495da139afd14a6265462'
            'de101a8d3f7cbed56903b14c0270139ff5976f40a1a0199fda1733c070ff24da'
            'd02434150e94b970603607e751718a96cbcbc7c080ddbd9517069968f0660ad4'
            '601fa8735a64292b687024291350173c61e34d2386e33288b0a9e5b52f2f93c7'
            'd4de015bf1d5462f6c5985b6cd279b146113625f56e833d6dd0ac0e7670aa242'
            'e4441cb51a48a528507e3a6232594d0c4ee8945bb301fae13331441011f355c3'
            '306966ffd6c9d5671de0bc1b2b27725428849108075dd4e1c6a7b4e5316961b0'
            '458c1111245f6e8c1617bab47f9c652a2f277c41ba2152a6a0625dd349c4c79f'
            'a82be85e8ce8b227ac5d28fc40e21553953662aabfe432075daaf900563a716f'
            'abb720a9b23a357834f438e73e18883032cc04a05bbd882ebd109afcec78cc8b'
            '31b0935942fe37156db70120031b9886da0e7ab09941aa00d8e85d04871a8cdc'
            'd89d04685205bf2783b0aca682152de92dc82984690958978297749aff816245'
            '04a82f6fa7b84cf31c9046805d637af1ef40e40ea728ed8ce4e05fcec9b75f7d'
            'e6b7b19ccfa1f8ac802596e9eea703957f68b07fdfa761046f2f26286af6b641'
            'a72305ba42efbf5c0c47ddb5bf2adc03dd9f441c5f227b3f71d4f3eb3c26f610'
            '57b25a9faee200cfcfa9bfeec65bbff36ec036600cd416305fdd01fbc513e78d'
            'f837fb56b3a1d11cda980f9ca8a8a48cec52fbf716b5c9ef47259f218ccede52'
            '95d752cfef85047e50bcaf9be04dac0bf36bddf5b8c3d9fb99d1c2f1a1a9c428'
            'ee731d547ca900c298a2dd37a3ce2527d1b15c48e0a31b2a4fd1105d351b4e81'
            '213280849f8f77ec6b5831bf63e15c3787914ae24f779b64ad13e03c2b6c5210'
            '586f58be5c2c8df52fc3f1f0d0b7232aa145e42b48023be92b3498a33e4e728c'
            '9d6a7e02484ed194945d9606638f9d5375daad415fba698bdd9eef52109c8f60'
            '2028c4544e5878e3b530d19b1e88012d885bb56d8f640c1efafadbd15c4f7606'
            '557b7d43b1c029a3cf345a219677aec3b6e5d1d66635a6d7a900a5cb2668c40a')
prepare() {
  tar --overwrite -xjf ${_filename}-${pkgver}.tar.bz2 -C ${srcdir} --checkpoint=100 \
    --exclude=${_foldername}-${pkgver}/{INSTALL,libjava,libgo,libgfortran} \
    --exclude=${_foldername}-${pkgver}/gcc/{ada,fortran,java,po}

  cd ${_foldername}-${pkgver}
  # Remove files added by patches below
  rm -fr gcc/config/m6809
  if [[ ${pkgver:0:3} == "4.3" || ${pkgver:0:3} == "4.4" ]] ; then
    if [[ ${pkgver:0:3} == "4.3" ]] ; then
      rm -f gcc/testsuite/gcc.target/arm/naked-1.c
      rm -f gcc/testsuite/gcc.target/arm/naked-2.c
    fi
    rm -f contrib/pod2man
  fi

  # Fixes for building with GCC version 5 or newer
  if [[ ${pkgver:0:3} == "4.3" || ${pkgver:0:3} == "4.4" ]] ; then
    patch --forward -p1 -i "$srcdir"/001-gcc-4.3-fixed-compile-issue-with-gcc-5-in-gcc-toplev.patch
  fi
  if [[ ${pkgver} == "4.4.7" || ${pkgver} == "4.5.4" ]] ; then
    patch --forward -p1 -i "$srcdir"/002-gcc-4.4.7-add-DWARF2_UNWIND_INFO-guard.patch
  fi
  if [[ ${pkgver:0:3} == "4.6" || ${pkgver:0:3} == "4.5" ]] ; then
    patch --forward -p1 -i "$srcdir"/003-gcc-4.5-add-GNUC_STDC_INLINE.patch
  fi

  # Backported Pull Requests or other changes from other branches
  if [[ ${pkgver:0:3} == "4.3" ]] ; then
    patch --forward -p1 -i "$srcdir"/005-gcc-4.3-core-prevent-naked-function-from-creating-stack-slots.patch
  fi
  if [[ ${pkgver:0:3} == "4.3" || ${pkgver:0:3} == "4.4" ]] ; then
    patch --forward -p1 -i "$srcdir"/006-gcc-4.3-PR_54300_rtl-optimization.patch
  else
    patch --forward -p1 -i "$srcdir"/006-gcc-4.5-PR_54300_rtl-optimization.patch
  fi
  if [[ ${pkgver:0:3} == "4.6" ]] ; then
    if [[ ${pkgver} != "4.6.3" && ${pkgver} != "4.6.4" ]] ; then
      patch --forward -p1 -i "$srcdir"/008-gcc-4.6-PR-bootstrap-51969.patch
    fi
  fi

  # Warning reduction changes
  patch --forward -p1 -i "$srcdir"/011-gcc-4.3-suppress-makeinfo-warning.patch

  patch --forward -p1 -i "$srcdir"/013-gcc-4.3-Change-default-NATIVE_SYSTEM_HEADER_DIR.patch

  # Build code or Sourcecode fix for documentation
  if [[ ${pkgver:0:3} == "4.3" ]] ; then
    patch --forward -p1 -i "$srcdir"/016-gcc-4.3-Fix-texi-docs-syntax-errors.patch
  elif [[ ${pkgver} == "4.6.4" ]] ; then
    patch --forward -p1 -i "$srcdir"/016-gcc-4.6.4-Fix-texi-docs-syntax-errors.patch
  elif [[ ${pkgver:0:3} == "4.6" ]] ; then
    patch --forward -p1 -i "$srcdir"/015-gcc-4.6-add-force-to-makeinfo.patch
  else
    patch --forward -p1 -i "$srcdir"/015-gcc-4.3-add-force-to-makeinfo.patch
  fi

  # GCC6809 source code changes
  if [[ ${pkgver:0:3} == "4.6" || ${pkgver:0:3} == "4.5" ]] ; then
    patch --forward -p1 -i "$srcdir"/021-gcc-4.6-bcd-modified-source-files.patch
  elif [[ ${pkgver:0:3} == "4.3" ]] ; then
    patch --forward -p1 -i "$srcdir"/021-gcc-4.3-edit-core-source-files.patch
  else
    patch --forward -p1 -i "$srcdir"/021-gcc-4.4-bcd-modified-source-files.patch
  fi
  if [[ ${pkgver:0:3} == "4.6" ]] ; then
    patch --forward -p1 -i "$srcdir"/022-gcc-4.6-add-m6809-source-files.patch
  elif [[ ${pkgver:0:3} == "4.5" ]] ; then
    patch --forward -p1 -i "$srcdir"/022-gcc-4.5-add-m6809-source-files.patch
  else
    patch --forward -p1 -i "$srcdir"/022-gcc-4.3-add-m6809-source-files.patch
  fi
  if [[ ${pkgver:0:3} == "4.3" || ${pkgver:0:3} == "4.4" ]] ; then
    patch --forward -p1 -i "$srcdir"/023-gcc-4.3-df-m6809-patch-to-prevent-naked-function-from-creat.patch
  fi
  if [[ ${pkgver:0:3} == "4.3" ]] ; then
    patch --forward -p1 -i "$srcdir"/025-gcc-4.3-add-support-for-C-exception-handling.patch
    patch --forward -p1 -i "$srcdir"/026-gcc-4.3-add-lib-support-for-C-exception-handling.patch
  fi

  # GCC6809 build code changes
  if [[ ${pkgver:0:3} == "4.3" ]] ; then
    patch --forward -p1 -i "$srcdir"/031-gcc-4.3-edit-config_sub.patch
  elif [[ ${pkgver} == "4.4.2" ]] ; then
    patch --forward -p1 -i "$srcdir"/031-gcc-4.4.0-edit-config_sub.patch
  elif [[ ${pkgver} == "4.4.1" ]] ; then
    patch --forward -p1 -i "$srcdir"/031-gcc-4.4.0-edit-config_sub.patch
  elif [[ ${pkgver} == "4.4.0" ]] ; then
    patch --forward -p1 -i "$srcdir"/031-gcc-4.4.0-edit-config_sub.patch
  else
    patch --forward -p1 -i "$srcdir"/031-gcc-4.4-edit-config_sub.patch
  fi
  patch --forward -p1 -i "$srcdir"/032-gcc-4.3-bcd-modified-libgcc-config.host-file.patch
  if [[ ${pkgver:0:3} == "4.3" ]] ; then
    patch --forward -p1 -i "$srcdir"/033-gcc-4.3-edit-config_gcc.patch
  else
    patch --forward -p1 -i "$srcdir"/033-gcc-4.4-edit-config_gcc.patch
  fi
  patch --forward -p1 -i "$srcdir"/034-gcc-4.3-edit-configure_ac.patch
  if [[ ${pkgver:0:3} == "4.3" || ${pkgver:0:3} == "4.4" ]] ; then
    patch --forward -p1 -i "$srcdir"/037-gcc-4.3-fix-error-with-pod2man-version-2.4.2-added-pod2man-f.patch
  fi

  patch --forward -p1 -i "$srcdir"/041-gcc-4.3-edit-configure.patch
}

build() {
  if [[ -d "build-gcc-${CARCH}" ]]; then
    rm -rf build-gcc-${CARCH}
  fi
  mkdir build-gcc-${CARCH}
  cd build-gcc-${CARCH}

  local -a _gcc_pass_cfg_options
  if [[ "${_build_boot_gcc}" == "yes" ]]; then
    _gcc_pass_cfg_options+=("--without-headers")
    _gcc_pass_cfg_options+=("--enable-languages=c")
  else
    _gcc_pass_cfg_options+=("--with-headers=${MINGW_PREFIX}/${_target}/include")
    _gcc_pass_cfg_options+=("--oldincludedir=${MINGW_PREFIX}/${_target}/include")
    _gcc_pass_cfg_options+=("--enable-languages=c,c++")
    _gcc_pass_cfg_options+=("--with-sysroot=${MINGW_PREFIX}/${_target}")
  fi

  CPPFLAGS=""
  CXXFLAGS="-O2 -Wno-error=format-security"
  CFLAGS="-O2 -Wno-error=format-security"
  ../${_foldername}-$pkgver/configure \
    "${_gcc_pass_cfg_options[@]}" \
    --with-newlib \
    --prefix=${MINGW_PREFIX} \
    --libexecdir=${MINGW_PREFIX}/lib \
    --infodir=${MINGW_PREFIX}/share/info \
    --mandir=${MINGW_PREFIX}/share/man \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --with-pkgversion="${_realname}${_patch_version}" \
    --with-bugurl="${url}/issues" \
    --target=${_target} \
    --program-prefix="${_target}-" \
    --enable-sjlj-exceptions \
    --disable-multilib \
    --disable-werror \
    --disable-nsl \
    --disable-shared \
    --disable-decimal-float \
    --disable-long-long \
    --disable-lto \
    --disable-threads \
    --disable-tls \
    --disable-libada \
    --disable-libffi \
    --disable-libgomp \
    --disable-libmudflap \
    --disable-libquadmath \
    --disable-libsanitizer \
    --disable-libssp \
    --disable-libstdcxx-pch \
    --with-as=${MINGW_PREFIX}/bin/${_target}-as \
    --with-ld=${MINGW_PREFIX}/bin/${_target}-ld \
    --with-ar=${MINGW_PREFIX}/bin/${_target}-ar

  make -j1 all-gcc
}

#check() {
#  cd "${_realname}-$pkgver/build-gcc-${CARCH}"
#  make -k check-gcc
#}

package() {
  CPPFLAGS=""
  CFLAGS="-O2"
  cd "build-gcc-${CARCH}"
  make -j1 DESTDIR="$pkgdir/" install-gcc

  # Add prefix to info pages to avoid conflict
  mv "$pkgdir${MINGW_PREFIX}/share/info/cpp.info" \
     "$pkgdir${MINGW_PREFIX}/share/info/${_target}-cpp.info"
  mv "$pkgdir${MINGW_PREFIX}/share/info/cppinternals.info" \
     "$pkgdir${MINGW_PREFIX}/share/info/${_target}-cppinternals.info"
  mv "$pkgdir${MINGW_PREFIX}/share/info/gcc.info" \
     "$pkgdir${MINGW_PREFIX}/share/info/${_target}-gcc.info"
  mv "$pkgdir${MINGW_PREFIX}/share/info/gccinstall.info" \
     "$pkgdir${MINGW_PREFIX}/share/info/${_target}n-gccinstall.info"
  mv "$pkgdir${MINGW_PREFIX}/share/info/gccint.info" \
     "$pkgdir${MINGW_PREFIX}/share/info/${_target}-gccint.info"

  # Remove man7 files to avoid conflict
  rm -fr $pkgdir${MINGW_PREFIX}/share/man/man
}

# vim:set ts=2 sw=2 et:
