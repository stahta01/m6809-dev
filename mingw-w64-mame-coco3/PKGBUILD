# Maintainer: Tim Stahlhut <stahta01@gmail.com>
# archlinux Maintainer:  Antonio Rojas
# archlinux Contributor: Sergej Pupykin
# archlinux Contributor: robb_force
# archlinux Contributor: JJDaNiMoTh
# Based on https://docs.mamedev.org/initialsetup/compilingmame.html#using-a-standard-msys2-installation
#          https://archlinux.org/packages/extra/x86_64/mame-tools/
#          https://aur.archlinux.org/packages/mame-git

# BUILD ERROR can happen maybe because of source path being too long
#   core/globals.h:9:10: fatal error: ../core/api-config.h: No such file or directory

_realname=mame
_subrealname=coco3

pkgbase=mingw-w64-${_realname}-${_subrealname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}-${_subrealname}")
pkgver=0.274
pkgrel=1
_sourcedir=mame-git
pkgdesc='Port of the popular Multiple Arcade Machine Emulator using SDL with OpenGL support (mingw-w64)'
url='https://mamedev.org/'
license=(GPL2)
arch=(any)
makedepends=(
  'git'
  "${MINGW_PACKAGE_PREFIX}-python"
  "${MINGW_PACKAGE_PREFIX}-make"
  "${MINGW_PACKAGE_PREFIX}-cc"
  "${MINGW_PACKAGE_PREFIX}-lua"
  "${MINGW_PACKAGE_PREFIX}-nasm"
  "${MINGW_PACKAGE_PREFIX}-asio"
  "${MINGW_PACKAGE_PREFIX}-rapidjson"
  "${MINGW_PACKAGE_PREFIX}-glm"
  "${MINGW_PACKAGE_PREFIX}-SDL2_ttf"
  "${MINGW_PACKAGE_PREFIX}-lua"
  "${MINGW_PACKAGE_PREFIX}-libutf8proc"
  "${MINGW_PACKAGE_PREFIX}-pugixml"
  "${MINGW_PACKAGE_PREFIX}-portmidi"
  "${MINGW_PACKAGE_PREFIX}-portaudio"
  "${MINGW_PACKAGE_PREFIX}-flac"
)
source=(${_sourcedir}::"git+https://github.com/mamedev/mame#tag=mame${pkgver/./}")
sha256sums=('SKIP')
options=(!debug !lto) # debug build fails under ArchLinux

prepare() {
  cd ${_sourcedir}

  if [[ -d "build-mame" ]]; then
    rm -rf build-mame
  fi
  if [[ -d "3rdparty/genie/bin" ]]; then
    rm -rf 3rdparty/genie/bin
  fi
  if [[ -d "3rdparty/genie/build/gmake.windows/obj" ]]; then
    rm -rf 3rdparty/genie/build/gmake.windows/obj
  fi

  echo "git clean"
  time git clean -fxd
}

build() {
  cd ${_sourcedir}

  if [[ ${MSYSTEM} == "MINGW32" ]]; then
    export _MAME_TARGET=windows_x86
    export _MAME_MINGW64=
    export _MAME_MINGW32=$MINGW_PREFIX
  elif [[ ${MSYSTEM} == "MINGW64" || ${MSYSTEM} == "UCRT64" ]]; then
    export _MAME_TARGET=windows_x64
    export _MAME_MINGW64=$MINGW_PREFIX
    export _MAME_MINGW32=
  fi

  # Work around build error in 3rdparty/asmjit/src/asmjit/arm/a64assembler.cpp
  # Likely an shell file handling caused error; added FORCE_DRC_C_BACKEND=1
  # Might be too long a source path

  MINGW64=${_MAME_MINGW64} \
  MINGW32=${_MAME_MINGW32} \
  mingw32-make --jobs=1 ${_MAME_TARGET} \
    SUBTARGET=${_subrealname} \
    SOURCES=trs/coco3.cpp \
    REGENIE=1 \
    FORCE_DRC_C_BACKEND=1 \
    VERBOSE=1 \
    NOWERROR=1 \
    OPTIMIZE=2 \
    TOOLS=0 \
    BUILDDIR=build-mame
}

package() {
  provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
  conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
  depends=(
    "${MINGW_PACKAGE_PREFIX}-flac"
    "${MINGW_PACKAGE_PREFIX}-SDL2_ttf"
    "${MINGW_PACKAGE_PREFIX}-qt5-base"
    "${MINGW_PACKAGE_PREFIX}-lua"
    "${MINGW_PACKAGE_PREFIX}-libutf8proc"
    "${MINGW_PACKAGE_PREFIX}-pugixml"
    "${MINGW_PACKAGE_PREFIX}-portmidi"
    "${MINGW_PACKAGE_PREFIX}-portaudio"
    "${MINGW_PACKAGE_PREFIX}-hicolor-icon-theme"
)

  cd ${_sourcedir}

  mkdir -p "$pkgdir"${MINGW_PREFIX}/bin
  cp ${_subrealname}.exe "$pkgdir"${MINGW_PREFIX}/bin/$_realname.exe

  # Install the extra bits
  install -Dm644 src/osd/modules/opengl/shader/glsl*.*h -t "$pkgdir"${MINGW_PREFIX}/lib/$_realname/shader/
  cp -ar {artwork,bgfx,plugins,language,ctrlr,keymaps,hash} "$pkgdir"${MINGW_PREFIX}/lib/$_realname/

  # Include the license
  install -Dm644 docs/LICENSE "$pkgdir"${MINGW_PREFIX}/share/licenses/$_realname/LICENSE

  # documentation
  install -dm0755 "$pkgdir"${MINGW_PREFIX}/share/doc
  cp -a docs "$pkgdir"${MINGW_PREFIX}/share/doc/$_realname
  rm -r "$pkgdir"${MINGW_PREFIX}/share/doc/$_realname/man
  install -Dm644 docs/man/*.6* -t "$pkgdir"${MINGW_PREFIX}/share/man/man6/
}
