# Maintainer: Tim S <stahta01@gmail.com>

_basename=newlib
_realname=${_basename}
_filename=${_basename}
_foldername=${_basename}
_target=arm-none-eabi

pkgbase=mingw-w64-arm-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_target}-${_realname}")
pkgver=1.16.0
pkgrel=1
pkgdesc="A C standard library implementation for the ARM microprocessors (mingw-w64)"
arch=('any')
url="https://sourceware.org/newlib/"
license=('Various')
groups=("${MINGW_PACKAGE_PREFIX}-${_target}-toolchain")
depends=()
makedepends=("${MINGW_PACKAGE_PREFIX}-boot-arm-gcc" "${MINGW_PACKAGE_PREFIX}-${_target}-binutils")
options=('staticlibs' '!strip' '!emptydirs')
if [[ ${pkgver} == "1.16.0" ]] ; then
  _source_sha256sum='db426394965c48c1d29023e1cc6d965ea6b9a9035d8a849be2750ca4659a3d07'
elif [[ ${pkgver} == "1.18.0" ]] ; then
  _source_sha256sum='d608f22b0b2e7725d2fca13cac19f34bc652d9773acadae778db9881746cb071'
elif [[ ${pkgver} == "1.19.0" ]] ; then
  _source_sha256sum='4f43807236b2274c220881ca69f7dc6aecc52f14bb32a6f03404d30780c25007'
elif [[ ${pkgver} == "1.20.0" ]] ; then
  _source_sha256sum='c644b2847244278c57bec2ddda69d8fab5a7c767f3b9af69aa7aa3da823ff692'
else
  echo "Skipping newlib sha256sums check!"
  _source_sha256sum='SKIP'
fi
source=("ftp://sourceware.org/pub/newlib/newlib-${pkgver}.tar.gz"
        301-newlib-1.15-df-changed-seek-offset-from-int-to-_fpos_t.patch
        302-newlib-1.16-include-string-h.patch)
sha256sums=(${_source_sha256sum}
            '8c0f1fbcc985631a7b6efc37ff9c12837fc61531797c7189dc27986c70b18a00'
            '97ec4d5af573a29e29242c8e8ddeae87577cf2bce46a880c3f92c3d18ffaab3f')
prepare() {
  cd ${srcdir}/${_filename}-${pkgver}

  # Changes that should work with non m6809 targets
  patch --forward -p1 -i "$srcdir"/301-newlib-1.15-df-changed-seek-offset-from-int-to-_fpos_t.patch
  if [[ ${pkgver} == "1.16.0" || ${pkgver} == "1.17.0" ]] ; then
    patch --forward -p1 -i "$srcdir"/302-newlib-1.16-include-string-h.patch
  fi
}

build() {
  # Build newlib
  if check_option "debug" "y"; then
    NEWLIB_CFLAGS="-O0"
  else
    # -O3 has a history of bugs in Win32 GCC; instead, use -O2
    NEWLIB_CFLAGS="-O2"
  fi
  NEWLIB_CFLAGS+=" -g -ffunction-sections -fdata-sections"
  cd $srcdir
  rm -rf build-${CARCH}

  mkdir -p $srcdir/build-${CARCH} && cd $srcdir/build-${CARCH}
  CCAS="${_target}-gcc" \
  CC_FOR_TARGET="${_target}-gcc" \
  AS_FOR_TARGET="${_target}-as" \
  AR_FOR_TARGET="${_target}-ar" \
  LD_FOR_TARGET="${_target}-ld" \
  RANLIB_FOR_TARGET="/bin/true" \
  CFLAGS="${NEWLIB_CFLAGS}" \
  ../${_filename}-${pkgver}/configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --prefix=${MINGW_PREFIX} \
    --target=${_target} \
    --program-prefix="${_target}-" \
    --disable-float \
    --disable-newlib-io-float \
    PATH="${MINGW_PREFIX}/${_target}/bin:${MINGW_PREFIX}/bin:${PATH}"

  cd $srcdir/build-${CARCH}
  make -j1 PATH="${MINGW_PREFIX}/${_target}/bin:${MINGW_PREFIX}/bin:${PATH}"
}

package() {
  cd ${srcdir}/build-${CARCH}
  make -j1 DESTDIR=${pkgdir} install

  # Remove files that conflict with host
  rm -rf "${pkgdir}${MINGW_PREFIX}/share/info"
  rm -rf "${pkgdir}${MINGW_PREFIX}/info"
}

